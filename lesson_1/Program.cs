//По хорошему, все методы вынести бы в отдельный класс, но тут у меня возникают проблемы и я могу запусться.
class Program
{
    static void Main(string[] args)
    {
        //Если бы подразумевались разные варианты действий с одними и теми же переменными, то их можно было бы объявить сразу. В этом случае они появляются только в том случае, если они востребованы.
        //Bool для проверки введенного числа и набор интов, если проверка прошла успешно. Подозреваю, что можно проверку и для них организовать на случай, если их значения выйдут за пределы допустимого.       
        Console.WriteLine("Здравствуйте. Вас приветствует некая математическая программа\nпожалуйста введите число. Для выхода введите q");
        TakeValue(Console.ReadLine());
        Console.ReadLine();





        void TakeValue(string userValue)//возможность выхода. Вариант - сделать через вайл для всего компелкса операций.
        {
            if (userValue == "q")
            {
                return;
            }
            else
            {
                CheckValue(userValue);
            }
        }

        void LesMath(int value)//Само действие. Так как итоговая конструкция не изменяема, то создавать отдельный блок для вывода показалось излишним.
        {
            int c1 = 1;
            int c2 = 0;
            int c3 = 0;

            for (int i = 1; i <= value; i++)
            {
                c1 = c1 * i;
                c2 = c2 + i;
                if (i % 2 == 0)
                {
                    c3 = i;
                }
            }
            Console.WriteLine($"Факториал равен {c1}\nСумма от 1 до {value} равна {c2} \nмаксимальное четное число меньше {value} равно {c3}");
            
        }


        void CheckValue(string _UserValue)//проверка переменной на соответствие
        {
            bool Chk = Int32.TryParse(_UserValue, out int result);
            if (Chk == false)
            {
                Console.WriteLine("Простите, нужна именно циферка");
                return;
            }
            else
            {
                LesMath(result);
            }
        }
    }
}
